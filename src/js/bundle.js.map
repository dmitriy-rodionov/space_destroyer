{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE,KAAK,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE,KAAK,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE,KAAK,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE,KAAK,EAAE;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+DAAe,IAAI;;;;;;;;;;;ACnDnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,UAAU;;;;;;;;;;;;;;ACnFzB;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCzBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNkC;AACD;AACG;AACU;AAC9C;AACA;AACA;AACA,yDAAI;AACJ,+DAAU;AACV;AACA;AACA;AACA,YAAY,qDAAG;AACf;AACA,CAAC;AACD;AACA;AACA,QAAQ,sDAAK;AACb;AACA,kC","sources":["webpack://global-opt/./src/js/modules/enemy.js","webpack://global-opt/./src/js/modules/move.js","webpack://global-opt/./src/js/modules/shiphealth.js","webpack://global-opt/./src/js/modules/shot.js","webpack://global-opt/webpack/bootstrap","webpack://global-opt/webpack/runtime/define property getters","webpack://global-opt/webpack/runtime/hasOwnProperty shorthand","webpack://global-opt/webpack/runtime/make namespace object","webpack://global-opt/./src/js/index.js"],"sourcesContent":["const sky = document.querySelector('.sky'),\r\n      ship = document.querySelector('.ship');\r\n\r\nexport default class Enemy {\r\n    constructor() {\r\n\r\n        let enemyShip = document.createElement('img');\r\n        enemyShip.style.width = '70px';\r\n        enemyShip.style.height = '90px';\r\n        // enemyShip.style.borderRadius = '10px';\r\n\r\n        function enemyType() {\r\n            let i = Math.round(Math.random() * 10);\r\n            if(i <= 2) {\r\n                // enemyShip.style.backgroundColor = 'pink';\r\n                enemyShip.src = 'img/kisspng.png';\r\n            } else if(i > 2 && i < 5) {\r\n                enemyShip.src = 'img/pngegg.png';\r\n            } else if(i >= 5 && i < 7) {\r\n                enemyShip.src = 'img/pngegg(2).png';\r\n            } else if(i >= 7 && i < 9) {\r\n                enemyShip.src = 'img/pngegg(5).png';\r\n            } else {\r\n                enemyShip.src = 'img/pngegg(3).png';\r\n            }\r\n        }\r\n\r\n        enemyType();\r\n        enemyShip.style.position = 'absolute';\r\n        enemyShip.style.top = '0px';\r\n\r\n        function enemyStart() {\r\n            let i = Math.round(Math.random() * 10);\r\n            if (i == 10) {\r\n                i = i - 1;\r\n            }\r\n            enemyShip.style.right = (i *10) + '%';\r\n        }\r\n\r\n        enemyStart();\r\n        sky.append(enemyShip);\r\n        \r\n        function enemyMove() {\r\n            let distance = +enemyShip.style.top.slice(0, -2);\r\n            if(enemyShip.getBoundingClientRect().bottom < sky.getBoundingClientRect().bottom) {\r\n                distance = distance + 1 + 'px';\r\n                enemyShip.style.top = distance;\r\n                enemyCrash();\r\n            } else{\r\n                enemyShip.remove();\r\n                clearInterval(enemyMove);\r\n            }\r\n        }\r\n        setInterval(enemyMove, 10);\r\n        \r\n        \r\n        function enemyCrash() {\r\n            let projectiles = document.querySelectorAll('.projectile');\r\n            projectiles.forEach((item) => {\r\n                if(\r\n                    item.getBoundingClientRect().top < enemyShip.getBoundingClientRect().bottom &&\r\n                    item.getBoundingClientRect().bottom < enemyShip.getBoundingClientRect().bottom &&\r\n                    item.getBoundingClientRect().left >= enemyShip.getBoundingClientRect().left &&\r\n                    item.getBoundingClientRect().right <= enemyShip.getBoundingClientRect().right &&\r\n                    ship.getBoundingClientRect().top > enemyShip.getBoundingClientRect().bottom\r\n                    ) {\r\n                        enemyBang(true);\r\n                        enemyShip.remove();\r\n                        item.remove();\r\n                    }\r\n                \r\n            });\r\n        }\r\n\r\n        function enemyBang(arg) {\r\n            const canvas = document.createElement('canvas'),\r\n                  ctx = canvas.getContext('2d'),\r\n                  sprite = new Image();\r\n\r\n            canvas.style.width = '140px';\r\n            canvas.style.height = '140px';\r\n            canvas.style.position = 'absolute';\r\n            canvas.style.top = enemyShip.style.top;\r\n            canvas.style.right = enemyShip.style.right;\r\n            canvas.style.transform = 'translateX(30%)';\r\n            sprite.src = 'img/sprite.png';\r\n            sky.append(canvas);\r\n\r\n            let tickCount = 0,\r\n                spriteLenght = 8,\r\n                frameWidth = 0,\r\n                frameHight = 0;\r\n\r\n            if(arg === true) {\r\n                tick();\r\n                setTimeout(() => canvas.remove(), 1000);\r\n            }\r\n\r\n            function tick() {\r\n                draw();\r\n                if(tickCount < spriteLenght) {\r\n                    frameWidth = frameWidth + 240;\r\n                }\r\n                if(tickCount == spriteLenght) {\r\n                    tickCount = 0;\r\n                    frameHight = frameHight + 240;\r\n                    frameWidth = 0;\r\n                }\r\n                requestAnimationFrame(tick);\r\n                tickCount++;\r\n            }\r\n            \r\n            function draw() {\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                ctx.drawImage(sprite, frameWidth, frameHight, 240, 240, 0, 0, canvas.width, canvas.height);\r\n            }\r\n        }\r\n\r\n        class EnemyGun {\r\n            constructor() {\r\n                const enemyProjectile = document.createElement('div');\r\n                enemyProjectile.classList.add('enemyProjectile');\r\n                enemyProjectile.style.left = (enemyShip.getBoundingClientRect().left) + ((enemyShip.getBoundingClientRect().width) / 2 - 3) +'px';\r\n                enemyProjectile.style.top = enemyShip.getBoundingClientRect().bottom + 'px';\r\n                sky.append(enemyProjectile);\r\n                let distance = +enemyProjectile.style.top.slice(0, -2);\r\n\r\n                function trajectory () {\r\n                    if (distance < sky.getBoundingClientRect().bottom) {\r\n                        distance = distance + 5;\r\n                        enemyProjectile.style.top = distance + 'px';\r\n                    } \r\n                    if(distance > sky.getBoundingClientRect().bottom) {\r\n                        clearInterval(trajectory);\r\n                        enemyProjectile.remove();\r\n                    }\r\n                    if(enemyProjectile.style.left.slice(0, -2) < 0) {\r\n                        enemyProjectile.remove();\r\n                    }\r\n                }\r\n                setInterval(trajectory, 10);\r\n            }\r\n        }\r\n        function createEnProj() {\r\n            new EnemyGun\r\n        }\r\n        setInterval(createEnProj, 5000);\r\n        \r\n    }\r\n}","const move = () => {\r\n    const ship = document.querySelector('.ship');\r\n    const sky = document.querySelector('.sky');\r\n    let x = 0,\r\n        y = 0;\r\n\r\n        moveUp(35);\r\n        moveDown(35);\r\n        moveRight(35);\r\n        moveLeft(35);\r\n        \r\n    function moveUp(i) {\r\n        document.addEventListener('keydown', (e) => {\r\n\r\n            if(e.code == 'KeyW' && (ship.getBoundingClientRect().top) > sky.getBoundingClientRect().top) {\r\n                y = y - i;\r\n                ship.style.transform = `translate(${x}px,${y}px)`;\r\n            }\r\n        }); \r\n    }\r\n\r\n    function moveDown(i) {\r\n        document.addEventListener('keydown', (e) => {\r\n            if(e.code == 'KeyS' && (ship.getBoundingClientRect().bottom) < sky.getBoundingClientRect().bottom) {\r\n                y = y + i;\r\n                ship.style.transform = `translate(${x}px,${y}px)`;\r\n            }\r\n        }); \r\n    }\r\n\r\n    function moveRight(i) {\r\n        document.addEventListener('keydown', (e) => {\r\n            e.preventDefault();\r\n            if(e.code == 'KeyD' && (ship.getBoundingClientRect().right) < sky.getBoundingClientRect().right) {\r\n                x = x + i;\r\n                ship.style.transform = `translate(${x}px,${y}px)`;\r\n            }\r\n        }); \r\n    }\r\n\r\n    function moveLeft(i) {\r\n        document.addEventListener('keydown', (e) => {\r\n            if(e.code == 'KeyA' && ship.getBoundingClientRect().left > sky.getBoundingClientRect().left) {\r\n                x = x - i;\r\n                ship.style.transform = `translate(${x}px,${y}px)`;\r\n            }\r\n        }); \r\n    } \r\n\r\n};\r\n\r\nexport default move;","const shipHealth = () => {\r\n    let health = 100,\r\n          ship = document.querySelector('.ship'),\r\n          sky = document.querySelector('.sky'),\r\n          scale = document.querySelector('.health'),\r\n          damage;\r\n    function reduceHealth() {\r\n       let enPr = document.querySelectorAll('.enemyProjectile');\r\n       enPr.forEach((item) => {\r\n        if(\r\n            item.getBoundingClientRect().top > ship.getBoundingClientRect().top &&\r\n            item.getBoundingClientRect().bottom < ship.getBoundingClientRect().bottom &&\r\n            item.getBoundingClientRect().left >= ship.getBoundingClientRect().left &&\r\n            item.getBoundingClientRect().right <= ship.getBoundingClientRect().right\r\n            ) {\r\n                calcDamage();\r\n                health = health - damage;\r\n                scale.style.transform = `translateX(${health}%)`;\r\n                projectileBang(true, item);\r\n                item.remove();\r\n            }\r\n       });\r\n    }\r\n    setInterval(reduceHealth, 10);\r\n    function calcDamage() {\r\n        let d = Math.round(Math.random() * 10);\r\n        if(d <= 3) {\r\n            damage = 3;\r\n        } else if(d > 3 && d <= 5) {\r\n            damage = 5;\r\n        } else if(d > 5 && d <= 8) {\r\n            damage = 7;\r\n        } else {\r\n            damage = 10;\r\n        }\r\n    }\r\n\r\n    // взрыв снаряда\r\n    function projectileBang(arg, item) {\r\n        const canvas = document.createElement('canvas'),\r\n              ctx = canvas.getContext('2d'),\r\n              sprite = new Image();\r\n\r\n        canvas.style.width = '40px';\r\n        canvas.style.height = '40px';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.top = item.style.top;\r\n        canvas.style.left = item.style.left;\r\n        canvas.style.transform = 'translateX(-30%)';\r\n        sprite.src = 'img/sprite.png';\r\n        sky.append(canvas);\r\n\r\n        let tickCount = 0,\r\n            spriteLenght = 8,\r\n            frameWidth = 0,\r\n            frameHight = 0;\r\n\r\n        if(arg === true) {\r\n            tick();\r\n            setTimeout(() => canvas.remove(), 1000);\r\n        }\r\n\r\n        function tick() {\r\n            draw();\r\n            if(tickCount < spriteLenght) {\r\n                frameWidth = frameWidth + 240;\r\n            }\r\n            if(tickCount == spriteLenght) {\r\n                tickCount = 0;\r\n                frameHight = frameHight + 240;\r\n                frameWidth = 0;\r\n            }\r\n            requestAnimationFrame(tick);\r\n            tickCount++;\r\n        }\r\n        \r\n        function draw() {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.drawImage(sprite, frameWidth, frameHight, 240, 240, 0, 0, canvas.width, canvas.height);\r\n        }\r\n    }\r\n}\r\n\r\nexport default shipHealth;","const ship = document.querySelector('.ship');\r\nconst sky = document.querySelector('.sky');\r\n  \r\n\r\nexport default class Gun {\r\n   constructor() {\r\n       const projectile = document.createElement('div');\r\n       projectile.classList.add('projectile');\r\n       sky.append(projectile);\r\n       projectile.style.left = (ship.getBoundingClientRect().left) + ((ship.getBoundingClientRect().width) / 2 - 3) +'px';\r\n       projectile.style.top = ship.getBoundingClientRect().top - 15 + 'px';\r\n       let distance = +projectile.style.top.slice(0, -2);\r\n       \r\n       function trajectory () {\r\n           if (distance > 0) {\r\n               distance = distance - 10;\r\n               projectile.style.top = distance + 'px';\r\n           } else{\r\n               clearInterval(trajectory);\r\n               projectile.remove();\r\n           }\r\n       }\r\n\r\n       setInterval(trajectory, 10);\r\n   }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import move from './modules/move';\r\nimport Gun from './modules/shot';\r\nimport Enemy from './modules/enemy';\r\nimport shipHealth from './modules/shiphealth';\r\n\r\n\r\n\r\nmove();\r\nshipHealth();\r\n\r\ndocument.addEventListener('keydown', (event) => {\r\n    if(event.code == 'Space') {\r\n        new Gun;\r\n    }\r\n});\r\n\r\nfunction makeEnemies() {\r\n    new Enemy();\r\n}\r\n// setInterval(makeEnemies, 5000);"],"names":[],"sourceRoot":""}